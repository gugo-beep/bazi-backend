// gugo-beep/backend/backend-4be0ba13368314c6714a4251deaaa86cb07287d8/src/update-frontend-mock.js

import { generateBaziProfile } from './baziService.js';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// 任务 3.2: 脚本现在可以接收多种格式的输入
const userInput = process.argv[2]; 
const genderArg = process.argv[3];

if (!userInput || !genderArg) {
    console.error("\n❌ 错误：请提供日期和性别！");
    console.error("用法示例:");
    console.error("  公历: node src/update-frontend-mock.js \"1996-04-13 00:18:00\" 女");
    console.error("  农历: node src/update-frontend-mock.js \"lunar:1996-2-26\" 女");
    console.error("  四柱: node src/update-frontend-mock.js \"pillars:丙子-壬辰-庚申-丙子\" 男\n");
    process.exit(1);
}

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const frontendMockFilePath = path.resolve(__dirname, '../../bazi-frontend/src/app/mock-bazi-data.ts');
const localOutputPath = path.resolve(__dirname, '../bazi-output.json');

async function updateMock() {
    console.log(`🚀 开始为 "${userInput}" (${genderArg}) 生成数据并更新前端...`);
    try {
        // 将用户输入直接传递给 baziService
        const baziData = await generateBaziProfile(userInput, genderArg);
        
        const tsFileContent = `// [Auto-generated by bazi-backend]\n// Case: ${userInput} (${genderArg})\n// Last updated: ${new Date().toLocaleString()}\n\nimport { BaziData } from "./bazi.interface";\n\nexport const mockBaziData: BaziData = ${JSON.stringify(baziData, null, 2)};\n`;

        fs.writeFileSync(frontendMockFilePath, tsFileContent);
        fs.writeFileSync(localOutputPath, JSON.stringify(baziData, null, 2));

        console.log(`\n✅ 全部成功！`);
        console.log(` -> 前端 mock 文件已更新: ${frontendMockFilePath}`);
        console.log(` -> 本地 JSON 文件已生成: ${localOutputPath}`);

        process.exit(0);
    } catch (error) {
        console.error("\n更新前端 mock 文件时出错:", error);
        process.exit(1);
    }
}

updateMock();